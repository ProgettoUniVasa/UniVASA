-- MySQL Script generated by MySQL Workbench
-- Wed Jan 27 17:00:27 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema univasa
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `univasa` ;

-- -----------------------------------------------------
-- Schema univasa
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `univasa` DEFAULT CHARACTER SET utf8 ;
USE `univasa` ;

-- -----------------------------------------------------
-- Table `univasa`.`Elettore`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`Elettore` ;

CREATE TABLE IF NOT EXISTS `univasa`.`Elettore` (
  `idElettore` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(50) NULL,
  `cognome` VARCHAR(50) NULL,
  `email` VARCHAR(50) NULL,
  `username` VARCHAR(50) NULL,
  `password` VARCHAR(50) NULL,
  `telefono` VARCHAR(11) NULL,
  `data_nascita` DATE NULL,
  `professione` ENUM('studente', 'professore', 'impiegato') NULL,
  `nome_università` VARCHAR(50) NULL,
  `dipartimento` VARCHAR(50) NULL,
  `matricola` VARCHAR(10) NULL,
  `certificato` TINYINT NULL,
  `categoria` VARCHAR(50) NULL,
  PRIMARY KEY (`idElettore`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`Scheda Elettorale`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`Scheda Elettorale` ;

CREATE TABLE IF NOT EXISTS `univasa`.`Scheda Elettorale` (
  `idScheda Elettorale` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Elettore_idElettore` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idScheda Elettorale`),
  INDEX `fk_Scheda Elettorale_Elettore1_idx` (`Elettore_idElettore` ASC) VISIBLE,
  CONSTRAINT `fk_Scheda Elettorale_Elettore1`
    FOREIGN KEY (`Elettore_idElettore`)
    REFERENCES `univasa`.`Elettore` (`idElettore`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`Amministratore`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`Amministratore` ;

CREATE TABLE IF NOT EXISTS `univasa`.`Amministratore` (
  `idAmministratore` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(50) NULL,
  `cognome` VARCHAR(50) NULL,
  `email` VARCHAR(50) NULL,
  `username` VARCHAR(50) NULL,
  `password` VARCHAR(50) NULL,
  `telefono` VARCHAR(11) NULL,
  `data_nascita` DATE NULL,
  `professione` ENUM('studente', 'professore', 'impiegato') NULL,
  `nome_università` VARCHAR(50) NULL,
  `dipartimento` VARCHAR(50) NULL,
  PRIMARY KEY (`idAmministratore`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`Evento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`Evento` ;

CREATE TABLE IF NOT EXISTS `univasa`.`Evento` (
  `idEvento` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(50) NULL,
  `regolamento` TEXT(500) NULL,
  `data_ora_inizio` DATETIME NULL,
  `data_ora_fine` DATETIME NULL,
  `luogo` VARCHAR(50) NULL,
  `report_risultati` TEXT(200) NULL,
  `report_statistiche` TEXT(200) NULL,
  `numero_preferenze_esprimibili` INT UNSIGNED NULL,
  `Scheda Elettorale_idScheda Elettorale` INT UNSIGNED NOT NULL,
  `Amministratore_idAmministratore` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idEvento`),
  INDEX `fk_Evento_Scheda Elettorale1_idx` (`Scheda Elettorale_idScheda Elettorale` ASC) VISIBLE,
  INDEX `fk_Evento_Amministratore1_idx` (`Amministratore_idAmministratore` ASC) VISIBLE,
  CONSTRAINT `fk_Evento_Scheda Elettorale1`
    FOREIGN KEY (`Scheda Elettorale_idScheda Elettorale`)
    REFERENCES `univasa`.`Scheda Elettorale` (`idScheda Elettorale`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Evento_Amministratore1`
    FOREIGN KEY (`Amministratore_idAmministratore`)
    REFERENCES `univasa`.`Amministratore` (`idAmministratore`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`Operatore`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`Operatore` ;

CREATE TABLE IF NOT EXISTS `univasa`.`Operatore` (
  `idOperatore` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(50) NULL,
  `cognome` VARCHAR(50) NULL,
  `email` VARCHAR(50) NULL,
  `username` VARCHAR(50) NULL,
  `password` VARCHAR(50) NULL,
  `telefono` VARCHAR(11) NULL,
  `data_nascita` DATE NULL,
  `professione` ENUM('studente', 'professore', 'impiegato') NULL,
  `nome_università` VARCHAR(50) NULL,
  `dipartimento` VARCHAR(50) NULL,
  PRIMARY KEY (`idOperatore`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`elettore_partecipa_evento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`elettore_partecipa_evento` ;

CREATE TABLE IF NOT EXISTS `univasa`.`elettore_partecipa_evento` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Evento_idEvento` INT UNSIGNED NOT NULL,
  `Elettore_idElettore` INT UNSIGNED NOT NULL,
  INDEX `fk_Evento_has_Elettore_Elettore1_idx` (`Elettore_idElettore` ASC) VISIBLE,
  INDEX `fk_Evento_has_Elettore_Evento1_idx` (`Evento_idEvento` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Evento_has_Elettore_Evento1`
    FOREIGN KEY (`Evento_idEvento`)
    REFERENCES `univasa`.`Evento` (`idEvento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Evento_has_Elettore_Elettore1`
    FOREIGN KEY (`Elettore_idElettore`)
    REFERENCES `univasa`.`Elettore` (`idElettore`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`Candidato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`Candidato` ;

CREATE TABLE IF NOT EXISTS `univasa`.`Candidato` (
  `idCandidato` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `voti_ricevuti` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idCandidato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`candidatura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`candidatura` ;

CREATE TABLE IF NOT EXISTS `univasa`.`candidatura` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Evento_idEvento` INT UNSIGNED NOT NULL,
  `Candidato_idCandidato` INT UNSIGNED NOT NULL,
  INDEX `fk_Evento_has_Candidato_Candidato1_idx` (`Candidato_idCandidato` ASC) VISIBLE,
  INDEX `fk_Evento_has_Candidato_Evento1_idx` (`Evento_idEvento` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Evento_has_Candidato_Evento1`
    FOREIGN KEY (`Evento_idEvento`)
    REFERENCES `univasa`.`Evento` (`idEvento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Evento_has_Candidato_Candidato1`
    FOREIGN KEY (`Candidato_idCandidato`)
    REFERENCES `univasa`.`Candidato` (`idCandidato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`opzioni_scheda_elettorale`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`opzioni_scheda_elettorale` ;

CREATE TABLE IF NOT EXISTS `univasa`.`opzioni_scheda_elettorale` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Candidato_idCandidato` INT UNSIGNED NOT NULL,
  `Scheda Elettorale_idScheda Elettorale` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Candidato_has_Scheda Elettorale_Scheda Elettorale1_idx` (`Scheda Elettorale_idScheda Elettorale` ASC) VISIBLE,
  INDEX `fk_Candidato_has_Scheda Elettorale_Candidato1_idx` (`Candidato_idCandidato` ASC) VISIBLE,
  CONSTRAINT `fk_Candidato_has_Scheda Elettorale_Candidato1`
    FOREIGN KEY (`Candidato_idCandidato`)
    REFERENCES `univasa`.`Candidato` (`idCandidato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Candidato_has_Scheda Elettorale_Scheda Elettorale1`
    FOREIGN KEY (`Scheda Elettorale_idScheda Elettorale`)
    REFERENCES `univasa`.`Scheda Elettorale` (`idScheda Elettorale`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `univasa`.`turnazione`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `univasa`.`turnazione` ;

CREATE TABLE IF NOT EXISTS `univasa`.`turnazione` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Evento_idEvento` INT UNSIGNED NOT NULL,
  `Operatore_idOperatore` INT UNSIGNED NOT NULL,
  `fascia_oraria` ENUM('mattina', 'pomeriggio', 'sera') NOT NULL,
  `data_turno` DATE NOT NULL,
  INDEX `fk_Evento_has_Operatore_Operatore1_idx` (`Operatore_idOperatore` ASC) VISIBLE,
  INDEX `fk_Evento_has_Operatore_Evento1_idx` (`Evento_idEvento` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Evento_has_Operatore_Evento1`
    FOREIGN KEY (`Evento_idEvento`)
    REFERENCES `univasa`.`Evento` (`idEvento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Evento_has_Operatore_Operatore1`
    FOREIGN KEY (`Operatore_idOperatore`)
    REFERENCES `univasa`.`Operatore` (`idOperatore`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
